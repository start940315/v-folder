{"version":3,"file":"build.js","sources":["../src/utils/object-assign.js","../src/utils/deepCopy.js","../src/transform.js","../src/store.js","../src/mixin.js","../src/v-node.vue","../src/v-leaf.vue","../src/v-branch.vue","../src/index.vue","../src/install.js","../src/index.js"],"sourcesContent":["// http://devdocs.io/javascript/global_objects/object/assign\nif (typeof Object.assign != 'function') {\n  Object.assign = function (target, varArgs) { // .length of function is 2\n    'use strict';\n    if (target == null) { // TypeError if undefined or null\n      throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    var to = Object(target);\n\n    for (var index = 1; index < arguments.length; index++) {\n      var nextSource = arguments[index];\n\n      if (nextSource != null) { // Skip over if undefined or null\n        for (var nextKey in nextSource) {\n          // Avoid bugs when hasOwnProperty is shadowed\n          if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n    return to;\n  };\n};\n\nexport default Object.assign;\n","/**\n * from https://github.com/vuejs/vuex/blob/dev/src/util.js\n */\n/**\n * Deep copy the given object considering circular structure.\n * This function caches all nested objects and its copies.\n * If it detects circular structure, use cached copy to avoid infinite loop.\n *\n * @param {*} obj\n * @param {Array<Object>} cache\n * @return {*}\n */\nexport default function deepCopy (obj, cache = []) {\n  // just return if obj is immutable value\n  if (obj === null || typeof obj !== 'object') {\n    return obj\n  }\n\n  // if obj is hit, it is in circular structure\n  const hit = find(cache, c => c.original === obj)\n  if (hit) {\n    return hit.copy\n  }\n\n  const copy = Array.isArray(obj) ? [] : {}\n  // put the copy into cache at first\n  // because we want to refer it in recursive deepCopy\n  cache.push({\n    original: obj,\n    copy\n  })\n\n  Object.keys(obj).forEach(key => {\n    copy[key] = deepCopy(obj[key], cache)\n  })\n\n  return copy\n}\n","/**\n * standardlize a normal tree object\n * \n * @param data   data to be transformed\n * @param conf   contains keys to extract data from `data`\n * @param level  identifier inferring depth\n */\nexport default transform;\n\nfunction transform(data = {}, config, level, path = \"\") {\n  path = path.replace(/^\\s*\\/+/, '/');\n  let { node, branch, leaf, check, open } = config;\n  let name = data[node] || '/';\n  let branches = data[branch] || [];\n  let leafs   = data[leaf] || [];\n  let canOpen  = branches.length > 0 || leafs.length > 0;\n  let chosen = data[chosen] || false;\n\n  if (!path) {\n    path = name === '/' ? name : `/${name}`;\n  }\n\n  branches = branches.map((item, i) => {\n    if (typeof item === 'string') {\n      let o = {};\n      o[node] = item;\n      item = o;\n    }\n\n    return transform(item, config, `${level}.${i}`, `${path}/${item[node]}`);\n  });\n  \n  leafs = leafs.map((leaf, i) => {\n    return {\n      name: leaf,\n      type: 'leaf',\n      check,\n      chosen,\n      level: `${level}.${i}`,\n      path: `${path}/${leaf}`\n    };\n  });\n\n  let status = canOpen ? 'filled' : 'empty';\n\n  return {\n    name,\n    type: 'branch',\n    level,\n    path,\n    node: { name, open: level == '0' || open, canOpen, check, level, path, type: 'node', status, chosen },\n    branches,\n    leafs,\n  };\n};\n","import objectAssign from './utils/object-assign';\nimport deepClone from './utils/deepCopy';\nimport transform from './transform';\n\nconst arrPush = [].push;\nconst defaultConf = {\n  node: 'name',\n  branch: 'dirs',\n  leaf: 'files',\n  open: false,\n  check: -1\n};\n\nexport default class Store {\n  constructor(data, conf) {\n    this.conf = objectAssign({}, defaultConf, conf);\n    let path = data.path || data[this.conf.node] || '/';\n    let name = path.split('/').filter(s => !!s).slice(-1)[0] || data.name;\n    data.name = name;\n    data.chosen = false;\n    this.dataStore = transform(data, this.conf, '0', path);\n    this.lastChosen = null;\n  }\n\n  /**\n   * set data store\n   * @private\n   */\n  replace(newTree) {\n    this.dataStore = newTree;\n  }\n\n  /**\n   * get parent branch by levelId.\n   * result for a leaf is the branch it is on,\n   * for a branch,  result is it's parent branch.\n   * \n   * @private\n   * @param levelId\n   */\n  findParentBranch(levelId = '') {\n    let length = levelId.length;\n    let branch = this.dataStore;\n\n    if (length <= 1) {\n      return null;\n    }\n    \n    let lvs    = levelId.split('.').slice(1, -1);\n    let index  = 0;\n\n    while (branch && (index = lvs.shift())) {\n      branch = branch.branches[index];\n    }\n\n    return branch;\n  }\n\n  /**\n   * get current branch\n   * \n   * @private\n   * @param levelId \n   */\n  findCurrentBranch(levelId = '') {\n    let lvs    = levelId.split('.').slice(1);\n    let index  = 0;\n    let branch = this.dataStore;\n\n    while (branch && (index = lvs.shift())) {\n      branch = branch.branches[index];\n    }\n\n    return branch;\n  }\n\n  /**\n   * check ascendents of certain level rescursively\n   * to see if they should get checked\n   * this is a passive ation\n   * \n   * @private\n   * @param branch    the descendent branch\n   * @param check     the descendent's check status\n   */\n  checkBranchAscendents(branch, check) {\n    if (!branch) return;\n\n    let { branches, leafs, node, level } = branch;\n    let nextStatus = 0;\n\n    switch (check) {\n      case 1:\n        // at least nextStatus will be zero,\n        // so let's see if all children checked\n        let branchesAllChecked = !branches.length || !branches.some(b => b.node.check < 1);\n        let leafsAllChecked = !leafs.length || !leafs.some(f => f.check < 1);\n        nextStatus = branchesAllChecked && leafsAllChecked ? 1 : 0;\n        break;\n\n      case 0:\n        // no doubt\n        nextStatus = 0;\n        break;\n\n      case -1:\n        // if all children are -1\n        // we'll get -1\n        // else we'll get 0\n        let branchesAllUnchecked = !branches.length || !branches.some(b => b.node.check > -1);\n        let leafsAllUnChecked = !leafs.length || !leafs.some(f => f.check > -1);\n        nextStatus = branchesAllUnchecked && leafsAllUnChecked ? -1 : 0;\n        break;\n    }\n\n    node.check = nextStatus;\n    this.checkBranchAscendents(this.findParentBranch(level), nextStatus);\n  }\n\n  /**\n   * check branch children and decendents.\n   * if node is checked, all children are checked too and vice versa.\n   *\n   * @private\n   * @param branch   current descendent branch\n   * @param check    the ascendent's check status\n   */\n  checkBranchDescendents(branch, check) {\n    branch.node.check = check;\n    if (!check) return;\n    branch.leafs.forEach(l => l.check = check);\n    branch.branches.forEach(b => {\n      b.node.check = check;\n      this.checkBranchDescendents(b, check);\n    });\n  }\n\n  /************************************************************************\n   * * * * * * * * * * * * Public Method Below * * * * * * * * * * * * * * \n   ************************************************************************/\n  /**\n   * if one node is checked/unchecked,\n   * we have to check/uncheck all ites descendents,\n   * and find if its ascendents should be checked.\n   * \n   * @param level  level of the node checked/unchecked\n   */\n  checkNode(node) {\n    // node.check: -1(unchecked) 0(imtermedite) 1(checked)\n    // 0 -> 1 (and state 0 is passive)\n    // 1 <=> -1\n    let branch = this.findCurrentBranch(node.level);\n    let checkState = branch.node.check;\n    let nextState = checkState < 1 ? 1 : -1;\n    this.checkBranchDescendents(branch, nextState);\n    this.checkBranchAscendents(this.findParentBranch(branch.level), nextState);\n  }\n  \n  /**\n   * if a leaf is checked,\n   * we have to check all its ascendents\n   * to see if any should get checked to.\n   * \n   * @param leaf\n   */\n  checkLeaf(leaf) {\n    let leafBranch = this.findParentBranch(leaf.level);\n    let nextState = -1 * leaf.check;\n    leaf.check = nextState;\n    this.checkBranchAscendents(leafBranch, nextState);\n  }\n\n   /**\n    * merge a branch to current tree\n    * @param branch\n    */\n  merge(\n    data = {},\n    node = {\n      level: '0',\n      path: ''\n    }\n  ) {\n    let { level, path, check } = node;\n    let lvs = level.split('.').slice(1);\n    let branch = transform(data, this.conf, level, path);\n\n    branch.node.open = true;\n    branch.node.check = check;\n    branch.node.status = 'done';\n\n    if (lvs.length === 0) {\n      this.replace(branch);\n    } else {\n      let clone = deepClone(this.dataStore);\n      let top   = clone;\n      let pos   = lvs.pop();\n      let index = 0;\n\n      while (index = lvs.shift()) {\n        top = top.branches[index];\n      }\n      top.branches.splice(pos, 1, branch);\n      top.node.canOpen = true;\n\n      this.replace(clone);\n    }\n\n\n    this.checkBranchDescendents(branch, check);\n  }\n\n  /**\n   * deal with actions\n   */\n  commit(action, elem) {\n    return new Promise((resolve, reject) => {\n      let isNode = elem.type === 'node';\n      if (action === 'change') {\n          this[isNode ? 'checkNode' : 'checkLeaf'](elem);\n          return resolve({\n            path: this.getPathResult(),\n            id: this.conf.id\n          });\n      }\n\n      if (action === 'unfold' && isNode) {\n        elem.open = !elem.open;\n\n        if (!elem.canOpen && elem.status !== 'done') {\n          elem.status = 'loading';\n          resolve();\n        } else {\n          reject();\n        }\n      }\n      \n      if (action === 'choose') {\n        elem.chosen = true;\n        if (this.lastChosen) {\n          this.lastChosen.chosen = false;\n        }\n        this.lastChosen = elem;\n        resolve({\n          path: elem.path,\n          id: this.conf.id\n        });\n      }\n    });\n  }\n\n  /**\n   * get result as path\n   */\n  getPathResult(branch) {\n    branch = branch || this.dataStore;\n\n    let result = [];\n    let { node, branches, leafs, path } = branch;\n\n    if (node.check > 0) {\n      result.push(branch.path);\n    } else {\n      leafs.forEach(({ check, path }) => {\n        if (check > 0) {\n          result.push(path);\n        }\n      });\n\n      branches.forEach(branch => {\n        arrPush.apply(result, this.getPathResult(branch))\n      });\n    }\n\n    return result;\n  }\n\n  raw() {\n    return transform.raw(this.dataStore, this.conf);\n  }\n};\n","export default {\n  methods: {\n    notify(type) {\n      this.___vemit(type, this.data);\n    },\n    listen(type, fn) {\n      this.___von(type, e => {\n        fn(e);\n      });\n    },\n    distroy() {\n      this.___voff();\n    }\n  }\n};\n","<template>\n  <li :class=\"isChosen\" :key=\"data.level\">\n    <i\n      class=\"fa\"\n      :class=\"folderClass\"\n      @click=\"notify('unfold')\"\n    ></i>\n    <span>\n      <i class=\"fa\" :class=\"checkboxClass\" @click=\"notify('change')\"></i>\n      <span @click=\"notify('choose')\" :title=\"data.name\">{{data.name}}</span>\n    </span>\n  </li>\n</template>\n\n<script>\n  import EventMixin from './mixin';\n\n  const classNames = [\n    'fa-square-o',\n    'fa-minus-square-o',\n    'fa-check-square-o',\n  ];\n\n  export default {\n    name: 'v-node',\n    mixins: [EventMixin],\n    props: {\n      data: {\n        type: Object,\n        required: true\n      },\n      uid: {\n        type: [String, Number],\n        required: true\n      }\n    },\n    computed: {\n      folderClass() {\n        let data = this.data;\n        let folderLoding = data.status === 'loading';\n        let folderOpen = data.canOpen && data.open;\n        let isEmpty = !data.canOpen && data.status === 'done';\n        return {\n          'fa-spinner cursor-progress': folderLoding,\n          'fa-folder-open-o': !folderLoding && folderOpen,\n          'fa-folder-o': !folderLoding && !folderOpen,\n          'cursor-no-ops': isEmpty\n        };\n      },\n      checkboxClass() {\n        return classNames[this.data.check + 1];\n      },\n      isChosen() {\n        return (this.data.chosen ? \"chosen \" : \"\") + \"v-node\";\n      }\n    }\n  };\n</script>\n","<template>\n  <li :class=\"isChosen\" :key=\"data.level\">\n    <i class=\"fa\" :class=\"className\" @click=\"notify('change')\"></i>\n    <span @click=\"notify('choose')\" :title=\"data.name\">{{data.name}}</span>\n  </li>\n</template>\n\n<script>\n  import EventMixin from './mixin';\n\n  const classNames = [\n    'fa-square-o',\n    'fa-minus-square-o',\n    'fa-check-square-o',\n  ];\n\n  export default {\n    name: 'v-leaf',\n    mixins: [EventMixin],\n    props: {\n      data: {\n        type: Object,\n        required: true\n      },\n      uid: {\n        type: [String, Number],\n        required: true\n      },\n      canChosen: Boolean\n    },\n    computed: {\n      className() {\n        return classNames[this.data.check + 1];\n      },\n      isChosen() {\n        return (this.data.chosen&&this.canChosen ? \"chosen \" : \"\")+\"v-leaf\";\n      }\n    }\n  };\n</script>\n","<template>\n  <li :key=\"data.node.level\" class=\"v-branch\">\n    <ul class=\"v-branch-body\">\n      <v-node :can-chosen=\"canChosen\" :data=\"data.node\" :uid=\"uid\"></v-node>\n      <v-branch\n        v-show=\"data.node.open\"\n        v-for=\"branch in data.branches\"\n        :key=\"data.node.name\"\n        :data=\"branch\"\n        :uid=\"uid\"\n        :can-chosen=\"canChosen\"\n      ></v-branch>\n      <v-leaf\n        v-show=\"data.node.open\"\n        v-for=\"leaf in data.leafs\"\n        :key=\"data.node.name\"\n        :data=\"leaf\"\n        :uid=\"uid\"\n        :can-chosen=\"canChosen\"\n      ></v-leaf>\n    </ul>\n  </li>\n</template>\n\n<script>\n  import EventMixin from './mixin';\n  import VLeaf from './v-leaf.vue';\n  import VNode from './v-node.vue';\n\n  export default {\n    name: 'v-branch',\n    mixins: [EventMixin],\n    props: {\n      data: {\n        type: Object,\n        required: true\n      },\n      uid: {\n        type: [String, Number],\n        required: true\n      },\n      canChosen: Boolean\n    },\n    components: {\n      'v-node': VNode,\n      'v-leaf': VLeaf\n    }\n  };\n</script>\n","<template>\n  <ul ref=\"container\" class=\"v-branch-body\">\n    <v-node :can-chosen=\"canChosen\" :data=\"node\" :uid=\"uid\"></v-node>\n    <v-branch v-show=\"node.open\" v-for=\"branch in branches\" :can-chosen=\"canChosen\" :data=\"branch\" :uid=\"uid\"></v-branch>\n    <v-leaf v-show=\"node.open\" v-for=\"leaf in leafs\" :can-chosen=\"canChosen\" :data=\"leaf\" :uid=\"uid\"></v-leaf>\n  </ul>\n</template>\n<script>\n  import Store from './store';\n  import EventMixin from './mixin';\n  import VNode from './v-node.vue';\n  import VLeaf from './v-leaf.vue';\n  import VBranch from './v-branch.vue';\n  import styles from './styles.css';\n\n  let uid = 0;\n\n  export default {\n    name: 'v-folder',\n    mixins: [EventMixin],\n    props: {\n      data: Object,\n      ajax: Object,\n      conf: Object,\n      nowChosen: {\n        type: [String, Number],\n        required: true\n      }\n    },\n    components: {\n      'v-node': VNode,\n      'v-leaf': VLeaf,\n      'v-branch': VBranch\n    },\n    watch: {\n      data(newVal, oldVal) {\n        let nameKey = this.conf && this.conf.node || 'name';\n        if (newVal[nameKey] !== oldVal[nameKey]) {\n          this.store = new Store(newVal, this.conf);\n        }\n      }\n    },\n    data() {\n      console.log(uid);\n      return {\n        uid: uid++,\n        store: new Store(this.data, this.conf)\n      };\n    },\n\n    computed: {\n      root() {\n        return this.store.dataStore;\n      },\n      branches() {\n        return this.root.branches;\n      },\n      leafs() {\n        return this.root.leafs;\n      },\n      node() {\n        return this.root.node;\n      },\n      canChosen() {\n        return this.nowChosen === this.uid;\n      }\n    },\n    \n    methods: {\n      resTransform(data, node) {\n        let conf = this.conf || {};\n        let dirKey  = conf['branch'] || 'dirs';\n        let fileKey = conf['leaf'] || 'files';\n        let nameKey = conf['node'] || 'name';\n\n        data[nameKey] = node.name;\n        data[dirKey]  = data[dirKey].map(d => ({[nameKey]: d}));\n        return data;\n      },\n\n      getReqConf(node) {\n        let reqConf = this.ajax || {};\n        let { url, method, data, params, pathAs, headers } = reqConf;\n\n        if (method || method.toUpperCase() === 'GET') {\n          reqConf.params = (params || {});\n          reqConf.params[pathAs] = node.path;\n        } else {\n          reqConf.data = (data || {});\n          reqConf.data[pathAs] = node.path;\n        }\n\n        reqConf.method = method || 'GET';\n        reqConf.headers = headers || {};\n\n        return reqConf;\n      },\n\n      request(node) {\n        if (!this.ajax) {\n          return Promise.reject('ajax:false');\n        }\n\n        let process = this.ajax.process || (res => res);\n\n        return this.$http(this.getReqConf(node))\n          .then(res => {\n            let data = process(res.data);\n            return this.resTransform(data, node);\n          });\n      }\n    },\n\n    created() {\n      this.listen('change', node => {\n        this.store.commit('change', node).then(res => this.$emit('change', res));\n      });\n\n      this.listen('unfold', node => {\n        if (node.open && node.canOpen) {\n          node.open =! node.open;\n          return;\n        }\n\n        this.store.commit('unfold', node)\n          .then(() => {\n\n            this.request(node)\n            .then(data => {\n              if (data) {\n                this.store.merge(data, node);\n              } else {\n                throw 'empty';\n              }\n            })\n            .catch(e => {\n              node.status = 'empty';\n              window.console && console.error(e);\n            });\n\n          })\n          .catch(e => node.status = 'done');\n\n      });\n      this.listen('choose', node => {\n        this.store.commit('choose', {\n          node,\n          nowChosen: this.nowChosen\n        }).then(res => this.$emit('choose', res));\n      });\n    },\n    \n    mounted() {\n      this.$nextTick(() => {\n        var el = this.$refs(\"container\");\n        var gcs = getComputedStyle;\n        var pi = parseInt;\n        var getHeight = (el) => pi(gcs(el).height);\n        var minWidth = pi(gcs(el).width);\n        var maxWidth = 500;\n        var center = (minWidth+maxWidth)/2;\n        \n        var standardHeight = getHeight(el);\n        do {\n          el.style.width = center+\"px\";\n          var temp = getHeight(el);\n          if( temp < standardHeight ) {\n            minWidth = center;\n          } else {\n            maxWidth = center;\n          }\n          center = (minWidth+maxWidth)/2;\n        } while (maxWidth-minWidth > 4);\n      })\n    },\n    \n    destroyed () {\n      this.distroy();\n    }\n  };\n</script>\n","export const eventMix = function (Vue) {\n  let hub = new Vue();\n  let proto = Vue.prototype;\n\n  proto.___von = function (type, cb) {\n    let uid = this.uid;\n    let vm = this;\n    let fn = function(e) {\n      if (uid === e.uid && cb) {\n        cb(e.data);\n      }\n    };\n    hub.$on(`#${uid}@${type}`, fn);\n  };\n\n  proto.___vemit = function (type, data) {\n    let uid = this.uid;\n    hub.$emit(`#${uid}@${type}`, { data, uid });\n  };\n\n  proto.___voff = function (type, fn) {\n    let uid = this.uid;\n\n    if (type) {\n      hub.$off(`#${uid}@${type}`, fn);\n    } else {\n      uid = `#${uid}@`\n      let len = uid.length;\n      let types = Object.keys(hub._events);\n      let match = types.filter(k => k.indexOf(uid) === 0);\n      match.forEach(k => {\n        hub.$off(k, fn);\n      })\n    }\n  };\n};\n","import VFolderComp from './index.vue';\nimport { eventMix } from './install';\n\nVFolderComp.install = Vue => {\n  let [mj, mi, pa] = Vue.version.split('.');\n  \n  let versionOk = mj > 2 || +mj === 2 && (mi > 1 || +mi === 1 && pa >= 5);\n  if (!versionOk) {\n    throw 'You should at least get Vue.js@2.1.5.'\n  }\n\n  eventMix(Vue);\n  Vue.component(VFolderComp.name, VFolderComp);\n};\n\nexport default VFolderComp;\n"],"names":["arguments","const","transform","let","deepClone","this","classNames","VFolderComp"],"mappings":"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"}